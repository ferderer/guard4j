# FinStream Spring Boot Configuration
# Guard4j Stock Price Streaming Demo

# Application Configuration
spring.application.name=finstream-spring-boot
server.port=8080
spring.profiles.active=development

# Completely disable Spring Boot default error handling - Guard4j only!
server.error.whitelabel.enabled=false
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# Guard4j Configuration - Complete error handling control
guard4j.enabled=true
guard4j.include-debug-info=false
guard4j.include-stack-trace=false
guard4j.web.enabled=true
guard4j.web.handle-spring-exceptions=true
guard4j.web.handle-validation-exceptions=true
guard4j.web.handle-security-exceptions=true

# Guard4j Observability
guard4j.observability.metrics-enabled=true
guard4j.observability.metrics-prefix=finstream
guard4j.observability.logging-enabled=true
guard4j.observability.context.enabled=true
guard4j.observability.context.include-trace-id=true
guard4j.observability.context.include-user-id=true
guard4j.observability.context.include-correlation-id=true

# Finnhub API Configuration
finnhub.api-key=${FINNHUB_API_KEY:demo}
finnhub.base-url=https://finnhub.io/api/v1
finnhub.timeout=5000
finnhub.max-retries=3
finnhub.retry-delay=1000

# Demo Configuration - 12 Tech Stocks
finstream.demo.stocks=AAPL,GOOGL,MSFT,AMZN,TSLA,NVDA,META,NFLX,AMD,CRM,UBER,SPOT
finstream.demo.rotation-interval=1000
finstream.demo.enabled=true

# WebSocket Configuration
spring.websocket.stomp.broker.heartbeat=25000,25000
spring.websocket.stomp.broker.application-destination-prefixes=/app
spring.websocket.stomp.broker.user-destination-prefix=/user

# Security Configuration (Simplified for Demo)
spring.security.oauth2.resourceserver.jwt.issuer-uri=${JWT_ISSUER_URI:http://localhost:8090/auth/realms/finstream}

# Actuator & Monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.tags.application=finstream-spring-boot
management.metrics.tags.framework=spring-boot
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Logging Configuration
logging.level.de.ferderer.guard4j=DEBUG
logging.level.de.ferderer.guard4j.examples.finstream=INFO
logging.level.org.springframework.web.socket=DEBUG
logging.level.org.springframework.messaging=DEBUG
logging.pattern.console=[%highlight(%-5p)] %d{HH:mm:ss.SSS}  %32.32c{32} | %m%n%ex{full}

# Jackson Configuration
spring.jackson.time-zone=UTC
spring.jackson.serialization.write-dates-as-timestamps=false

# Development Tools
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
